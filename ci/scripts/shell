#!/bin/bash

# This script works like the "acceptance-tests" script, except it does not launch the test suite.
# Instead, it only deploys BOSH and creates a dev release and then leaves an open shell for the developer to manually
# run any test or deployment.
# To be executed by acceptance-tests/run-shell.sh.

set -eu

stemcell_path=$PWD/stemcell/*.tgz

cd ${REPO_ROOT:?required}
echo "----- Pulling in any git submodules..."
git submodule update --init --recursive --force

echo "----- Starting BOSH"

./ci/scripts/start-bosh.sh

function stop_docker() {
  echo "----- stopping docker"
  service docker stop
}

trap stop_docker EXIT

source /tmp/local-bosh/director/env

echo "----- Creating candidate BOSH release..."
bosh -n reset-release # in case dev_releases/ is in repo accidentally

bosh create-release
bosh upload-release --rebase
release_final_version=$(spruce json dev_releases/*/index.yml | jq -r ".builds[].version" | sed -e "s%+.*%%")
export RELEASE_VERSION="${release_final_version}.latest"
echo "----- Created ${RELEASE_VERSION}"

echo "----- Uploading stemcell"
bosh -n upload-stemcell $stemcell_path

echo "----- Uploading os-conf (used for tests only)"
bosh -n upload-release --sha1 386293038ae3d00813eaa475b4acf63f8da226ef \
  https://bosh.io/d/github.com/cloudfoundry/os-conf-release?v=22.1.2

export BOSH_PATH=$(which bosh)
export BASE_MANIFEST_PATH="$PWD/manifests/pcap-acceptance-tests.yml"

bash
