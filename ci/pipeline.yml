---
groups:
  - name: pcap-release
    jobs:
      - unit-tests
      - unit-tests-pr
      - shipit
      - rc
      - acceptance-tests
      - acceptance-tests-pr
      - autobump-dependencies
      - build-pcap-testflight-image

jobs:
  - name: unit-tests
    public: true
    serial: true
    plan:
      - do:
          - get: git
            trigger: true
          - get: pcap-release-testflight
          - task: lint
            image: pcap-release-testflight
            config:
              platform: linux
              inputs:
                - { name: git }
              caches:
                - path: git/vendor/cache
                - path: git/.bundle
              run:
                path: ./git/ci/scripts/lint
                args: []
              params:
                REPO_ROOT: git
          - task: unit-tests
            image: pcap-release-testflight
            config:
              platform: linux
              inputs:
                - { name: git }

              caches:
                - path: git/vendor/cache
                - path: git/.bundle
              run:
                path: ./git/ci/scripts/unit-tests
                args: []
              params:
                REPO_ROOT: git
        on_failure:
          put: notify
          params:
            channel: "#pcap-release"
            username: ci-bot
            icon_url: "((slack.icon))"
            text: "((slack.fail_url)) pcap-release : unit-tests job failed"

  - name: unit-tests-pr
    public: true
    serial: true
    plan:
      - do:
          - { get: git-pull-requests, trigger: true, version: every }
          - get: pcap-release-testflight
          - put: git-pull-requests
            params:
              path: git-pull-requests
              status: pending
              context: unit-tests
          - task: lint
            image: pcap-release-testflight
            config:
              platform: linux
              inputs:
                - { name: git-pull-requests }
              caches:
                - path: git-pull-requests/vendor/cache
                - path: git-pull-requests/.bundle
              run:
                path: ./git-pull-requests/ci/scripts/lint
                args: []
              params:
                REPO_ROOT: git-pull-requests
          - task: unit-tests
            image: pcap-release-testflight
            config:
              platform: linux
              inputs:
                - { name: git-pull-requests }
              caches:
                - path: git-pull-requests/vendor/cache
                - path: git-pull-requests/.bundle
              run:
                path: ./git-pull-requests/ci/scripts/unit-tests
                args: []
              params:
                REPO_ROOT: git-pull-requests
    on_success:
      put: git-pull-requests
      params:
        path: git-pull-requests
        status: success
        context: unit-tests
    on_failure:
      put: git-pull-requests
      params:
        path: git-pull-requests
        status: failure
        context: unit-tests

  - name: acceptance-tests
    public: true
    serial: true
    plan:
    - do:
      - in_parallel:
        - { get: git, trigger: true, passed: [ unit-tests ] }
        - { get: stemcell }
        - get: pcap-release-testflight
    - task: acceptance-tests
      privileged: true
      image: pcap-release-testflight
      config:
        platform: linux
        inputs:
          - { name: git }
          - { name: stemcell }
        run:
          path: ./git/ci/scripts/acceptance-tests
          args: [ ]
        params:
          REPO_ROOT: git
      on_failure:
        put: notify
        params:
          channel: "#pcap-release"
          username: ci-bot
          icon_url: "((slack.icon))"
          text: "((slack.fail_url)) pcap-release: acceptance-tests job failed"

  - name: acceptance-tests-pr
    public: true
    serial: true
    plan:
    - do:
      - { get: git-pull-requests, trigger: true, version: every }
      - { get: stemcell }
      - get: pcap-release-testflight
    - put: git-pull-requests
      params:
        path: git-pull-requests
        status: pending
        context: acceptance-tests
    - task: acceptance-tests
      privileged: true
      image: pcap-release-testflight
      config:
        platform: linux
        inputs:
          - { name: git-pull-requests }
          - { name: stemcell }
        run:
          path: ./git-pull-requests/ci/scripts/acceptance-tests
          args: [ ]
        params:
          REPO_ROOT: git-pull-requests
      on_success:
        put: git-pull-requests
        params:
          path: git-pull-requests
          status: success
          context: acceptance-tests
      on_failure:
        put: git-pull-requests
        params:
          path: git-pull-requests
          status: failure
          context: acceptance-tests

  - name: shipit
    public: true
    serial: true
    plan:
    - do:
      - in_parallel:
          - { get: git,     passed: [rc] }
          - get: pcap-release-testflight
      - task: release
        image: pcap-release-testflight
        config:
          platform: linux
          inputs:
            - name: git
          outputs:
            - name: gh
          run:
            path: ./git/ci/scripts/shipit
            args: []
          params:
            RELEASE_NAME: pcap-release
            REPO_ROOT:    git
            RELEASE_ROOT: gh
            BRANCH:        main
            GITHUB_OWNER:  cloudfoundry
            GITHUB_TOKEN: ((github.access_token))
            GCP_SERVICE_KEY: ((gcp.service_key))

      - put: blobstore
        params:
          file:  "gh/artifacts/pcap-*.tgz"
      on_failure:
        put: notify
        params:
          channel:  "#pcap-release"
          username: ci-bot
          icon_url: "((slack.icon))"
          text:    "((slack.fail_url)) pcap-boshrelease : shipit job failed"

  - name: rc
    public: true
    serial: true
    plan:
    - do:
      - in_parallel:
          - { get: git,     passed: [acceptance-tests] }
          - get: pcap-release-testflight
      - task: release-candidate
        image: pcap-release-testflight
        config:
          platform: linux
          inputs:
            - name: git
          outputs:
            - name: gh
          run:
            path: ./git/ci/scripts/shipit
            args: []
          params:
            RELEASE_NAME: pcap-release
            REPO_ROOT:    git
            RELEASE_ROOT: gh
            BRANCH:        main
            DRY_RUN: true
            GITHUB_OWNER:  cloudfoundry
            GITHUB_TOKEN: ((github.access_token))
            GCP_SERVICE_KEY: ((gcp.service_key))
  - name: autobump-dependencies
    public: true
    serial: true
    plan:
    - do:
      - get: daily
        trigger: true
      - get: git
      - get: golang-release
      - get: pcap-release-testflight
      - in_parallel:
          steps:
          - task: autobump-dependencies
            image: pcap-release-testflight
            config:
              inputs:
                - name: git
              platform: linux
              run:
                dir: git
                path: /usr/bin/python3
                args: [ "ci/scripts/autobump-dependencies.py" ]
              params:
                REPO_ROOT: git
                PR_BASE: main
                PR_ORG: cloudfoundry
                PR_LABEL: run-ci

                GCP_SERVICE_KEY: ((gcp.service_key))
                GITHUB_COM_TOKEN: ((github.access_token))
          - task: autobump-golang-release
            image: pcap-release-testflight
            config:
              inputs:
                - name: git
                - name: golang-release
              platform: linux
              run:
                dir: git
                path: /usr/bin/python3
                args: [ "ci/scripts/bump_golang_vendored.py" ]
              params:
                GO_PACKAGE_REPO_ROOT: ../golang-release
                REPO_ROOT: git
                PR_BASE: main
                PR_ORG: cloudfoundry
                PR_LABEL: run-ci
                GIT_AUTHOR_NAME: ((github.bot_user))
                GIT_AUTHOR_EMAIL: ((github.bot_email))

                GCP_SERVICE_KEY: ((gcp.service_key))
                GITHUB_COM_TOKEN: ((github.access_token))

  - name: build-pcap-testflight-image
    public: true
    serial: true
    plan:
      - in_parallel:
          - get: git-ci
            trigger: true
          - get: daily
            trigger: true
          - get: docker-cpi-image
            trigger: true
      - task: create-daily-tag
        image: docker-cpi-image
        config:
          outputs:
            - name: tag
          platform: linux
          run:
            path: sh
            args:
            - -exc
            - date +%Y%m%d.%H%M%S | tee tag/today
      - put: pcap-release-testflight
        params:
          tag_as_latest: true
          tag_file: tag/today
          build: git-ci/ci
        get_params:
          skip_download: true

resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource

  - name: pull-request
    type: docker-image
    source:
      repository: cf-routing.common.repositories.cloud.sap/eirini-github-pr-resource
      tag: latest
      username: ((docker.username))
      password: ((docker.password))

  - name: gcs
    type: docker-image
    source:
      repository: frodenas/gcs-resource

resources:
  - name: git
    type: git
    source:
      uri: https://github.com/cloudfoundry/pcap-release.git
      branch: main
      password: ((github.access_token))
  - name: golang-release
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-package-golang-release
      branch: main
      password: ((github.access_token))

  - name: git-pull-requests
    type: pull-request
    source:
      access_token: ((github.access_token))
      repository: cloudfoundry/pcap-release
      base_branch: main
      labels: [run-ci]
      required_review_approvals: 1
      trusted_teams:
        - "wg-app-runtime-platform-networking-extensions-approvers"
      trusted_users:
        - "dependabot"
        - "CFN-CI"

  - name: notify
    type: slack-notification
    source:
      url: ((slack.pcap_release_webhook))

  - name: blobstore
    type: gcs
    source:
      bucket:   pcap-release
      json_key: ((gcp.service_key))
      regexp:   pcap-v[0-9a-z\.+-]+.tgz

  - name: stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-warden-boshlite-ubuntu-jammy-go_agent

  - name: daily
    type: time
    source:
      start: 7:00 AM
      stop: 8:00 AM
      location: Europe/Berlin
      interval: 24h

  - name: git-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry/pcap-release.git
      branch: main
      paths:
        - ci/Dockerfile
        - ci/scripts/requirements.txt

  - name: docker-cpi-image
    type: docker-image
    source:
      repository: bosh/docker-cpi

  - name: pcap-release-testflight
    type: docker-image
    source:
      repository: europe-west3-docker.pkg.dev/app-runtime-platform-wg/arp-wg-docker/pcap-release-testflight
      username: _json_key
      password: ((gcp.docker_image_writer_service_key))
