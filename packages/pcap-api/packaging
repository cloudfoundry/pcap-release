set -e

# Available variables:
# $BOSH_COMPILE_TARGET - where this package & spec'd source files are available
# $BOSH_INSTALL_TARGET - where you copy/install files to be included in package

source /var/vcap/packages/golang-1-linux/bosh/compile.env


# TODO: maybe these are not needed? Where does this get executed?
#       if this is executed on some VM we don't care about we could just use the
#       go default values and ignore the directories since we won't need them after
#       compilation anyways. we should NOT place them in the BOSH_INSTALL_TARGET
#       since we don't want that stuff in the final package.
mkdir $BOSH_INSTALL_TARGET/gopath
mkdir $BOSH_INSTALL_TARGET/gocache
export GOPATH=$BOSH_COMPILE_TARGET/gopath
export GOCACHE=$BOSH_COMPILE_TARGET/gocache

echo "Build libpcap"
LIBPCAP_VERSION=1.10.1 # https://www.tcpdump.org/release/
mkdir "${BOSH_COMPILE_TARGET}/libpcap"
tar xzf libpcap-${LIBPCAP_VERSION}.tgz --strip-components 1 -C "${BOSH_COMPILE_TARGET}/libpcap"

pushd "${BOSH_COMPILE_TARGET}/libpcap"
  ./configure
  make
popd

pushd pcap
  # -I adds the local libpcap to the search path for the compiler
  export CGO_CFLAGS="-I${BOSH_COMPILE_TARGET}/libpcap"
  # -L adds the local libpcap to the search path for the linker
  # -linkmode external: use an external linker: https://cs.opensource.google/go/go/+/refs/tags/go1.18:src/cmd/cgo/doc.go;l=794
  # -extldflags -static: pass -static to ld, see man 1 ld (https://linux.die.net/man/1/ld) for details
  export CGO_LDFLAGS="-L${BOSH_COMPILE_TARGET}/libpcap -static"

  go build -ldflags '-linkmode external' -o "${BOSH_INSTALL_TARGET}/bin/pcap-api" github.com/cloudfoundry/pcap-release/src/pcap/cmd/pcap-api

  GOOS=linux GOARCH=amd64 go build -o "${BOSH_INSTALL_TARGET}/bin/cli/build/pcap-bosh-cli-linux-amd64" github.com/cloudfoundry/pcap-release/src/pcap/cmd/pcap-bosh-cli
popd
